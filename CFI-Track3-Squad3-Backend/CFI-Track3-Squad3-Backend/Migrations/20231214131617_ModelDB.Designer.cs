// <auto-generated />
using System;
using CFI_Track3_Squad3_Backend.DTOs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CFI_Track3_Squad3_Backend.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20231214131617_ModelDB")]
    partial class ModelDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CFI_Track3_Squad3_Backend.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Account_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("account_CreationDate");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit")
                        .HasColumnName("account_IsBlocked");

                    b.Property<decimal>("Money")
                        .HasColumnType("DECIMAL")
                        .HasColumnName("account_Money");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("account_UserId");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2023, 12, 14, 10, 16, 17, 105, DateTimeKind.Local).AddTicks(2131),
                            IsBlocked = false,
                            Money = 1000.00m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2023, 12, 14, 10, 16, 17, 105, DateTimeKind.Local).AddTicks(2151),
                            IsBlocked = false,
                            Money = 2000.00m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2023, 12, 14, 10, 16, 17, 105, DateTimeKind.Local).AddTicks(2153),
                            IsBlocked = true,
                            Money = 1500.50m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2023, 12, 14, 10, 16, 17, 105, DateTimeKind.Local).AddTicks(2155),
                            IsBlocked = false,
                            Money = 3000.75m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CFI_Track3_Squad3_Backend.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeletedTimeUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("role_deletedTimeUtc");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role_description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("role_isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role_name");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            IsDeleted = false,
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Consultant",
                            IsDeleted = false,
                            Name = "Consultant"
                        });
                });

            modelBuilder.Entity("CFI_Track3_Squad3_Backend.Entities.User", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"), 1L, 1);

                    b.Property<DateTime?>("DeletedTimeUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTimeUtc");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("FirstName");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("IsDelete");

                    b.Property<string>("LastName")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("Password")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Password");

                    b.Property<int>("Points")
                        .HasColumnType("NUMBER")
                        .HasColumnName("Points");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RolId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CFI_Track3_Squad3_Backend.Entities.User", b =>
                {
                    b.HasOne("CFI_Track3_Squad3_Backend.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
